{"ast":null,"code":"function mergeClassNames(_ref) {\n  let {\n    cx,\n    classes,\n    context,\n    classNames,\n    name,\n    cache\n  } = _ref;\n  const contextClassNames = context.reduce((acc, item) => {\n    Object.keys(item.classNames).forEach(key => {\n      if (typeof acc[key] !== \"string\") {\n        acc[key] = \"\".concat(item.classNames[key]);\n      } else {\n        acc[key] = \"\".concat(acc[key], \" \").concat(item.classNames[key]);\n      }\n    });\n    return acc;\n  }, {});\n  return Object.keys(classes).reduce((acc, className) => {\n    acc[className] = cx(classes[className], contextClassNames[className], classNames != null && classNames[className], Array.isArray(name) ? name.filter(Boolean).map(part => \"\".concat((cache == null ? void 0 : cache.key) || \"mantine\", \"-\").concat(part, \"-\").concat(className)).join(\" \") : name ? \"\".concat((cache == null ? void 0 : cache.key) || \"mantine\", \"-\").concat(name, \"-\").concat(className) : null);\n    return acc;\n  }, {});\n}\nexport { mergeClassNames };","map":{"version":3,"names":["mergeClassNames","_ref","cx","classes","context","classNames","name","cache","contextClassNames","reduce","acc","item","Object","keys","forEach","key","concat","className","Array","isArray","filter","Boolean","map","part","join"],"sources":["C:\\GitRepHelpers\\sandbox\\node_modules\\@mantine\\styles\\src\\tss\\utils\\merge-class-names\\merge-class-names.ts"],"sourcesContent":["import type { EmotionCache } from '@emotion/cache';\nimport { useMantineProviderStyles } from '../../../theme/MantineProvider';\n\ninterface Input<T extends Record<string, string>> {\n  cx(...classNames: any): string;\n  classes: T;\n  context: ReturnType<typeof useMantineProviderStyles>;\n  classNames: Partial<T>;\n  name: string | string[];\n  cache: EmotionCache;\n}\n\nexport function mergeClassNames<T extends Record<string, string>>({\n  cx,\n  classes,\n  context,\n  classNames,\n  name,\n  cache,\n}: Input<T>) {\n  const contextClassNames = context.reduce<Record<string, string>>((acc, item) => {\n    Object.keys(item.classNames).forEach((key) => {\n      if (typeof acc[key] !== 'string') {\n        acc[key] = `${item.classNames[key]}`;\n      } else {\n        acc[key] = `${acc[key]} ${item.classNames[key]}`;\n      }\n    });\n\n    return acc;\n  }, {});\n\n  return Object.keys(classes).reduce((acc, className) => {\n    acc[className] = cx(\n      classes[className],\n      contextClassNames[className],\n      classNames != null && classNames[className],\n      Array.isArray(name)\n        ? name\n            .filter(Boolean)\n            .map((part) => `${cache?.key || 'mantine'}-${part}-${className}`)\n            .join(' ')\n        : name\n        ? `${cache?.key || 'mantine'}-${name}-${className}`\n        : null\n    );\n    return acc;\n  }, {}) as T;\n}\n"],"mappings":"AAAO,SAASA,eAAeA,CAAAC,IAAA,EAO5B;EAAA,IAP6B;IAC9BC,EAAE;IACFC,OAAO;IACPC,OAAO;IACPC,UAAU;IACVC,IAAI;IACJC;EACF,CAAC,GAAAN,IAAA;EACC,MAAMO,iBAAiB,GAAGJ,OAAO,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IACtDC,MAAM,CAACC,IAAI,CAACF,IAAI,CAACN,UAAU,CAAC,CAACS,OAAO,CAAEC,GAAG,IAAK;MAC5C,IAAI,OAAOL,GAAG,CAACK,GAAG,CAAC,KAAK,QAAQ,EAAE;QAChCL,GAAG,CAACK,GAAG,CAAC,MAAAC,MAAA,CAAML,IAAI,CAACN,UAAU,CAACU,GAAG,CAAC,CAAE;MAC5C,CAAO,MAAM;QACLL,GAAG,CAACK,GAAG,CAAC,MAAAC,MAAA,CAAMN,GAAG,CAACK,GAAG,CAAC,OAAAC,MAAA,CAAIL,IAAI,CAACN,UAAU,CAACU,GAAG,CAAC,CAAE;MACxD;IACA,CAAK,CAAC;IACF,OAAOL,GAAG;EACd,CAAG,EAAE,EAAE,CAAC;EACN,OAAOE,MAAM,CAACC,IAAI,CAACV,OAAO,CAAC,CAACM,MAAM,CAAC,CAACC,GAAG,EAAEO,SAAS,KAAK;IACrDP,GAAG,CAACO,SAAS,CAAC,GAAGf,EAAE,CAACC,OAAO,CAACc,SAAS,CAAC,EAAET,iBAAiB,CAACS,SAAS,CAAC,EAAEZ,UAAU,IAAI,IAAI,IAAIA,UAAU,CAACY,SAAS,CAAC,EAAEC,KAAK,CAACC,OAAO,CAACb,IAAI,CAAC,GAAGA,IAAI,CAACc,MAAM,CAACC,OAAO,CAAC,CAACC,GAAG,CAAEC,IAAI,OAAAP,MAAA,CAAQ,CAACT,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,KAAK,CAACQ,GAAG,KAAK,SAAS,OAAAC,MAAA,CAAIO,IAAI,OAAAP,MAAA,CAAIC,SAAS,CAAE,CAAC,CAACO,IAAI,CAAC,GAAG,CAAC,GAAGlB,IAAI,MAAAU,MAAA,CAAM,CAACT,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,KAAK,CAACQ,GAAG,KAAK,SAAS,OAAAC,MAAA,CAAIV,IAAI,OAAAU,MAAA,CAAIC,SAAS,IAAK,IAAI,CAAC;IAC/V,OAAOP,GAAG;EACd,CAAG,EAAE,EAAE,CAAC;AACR","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}