{"ast":null,"code":"import { useRef } from 'react';\nconst MAX_ITERATIONS_COUNT = 50;\nfunction iterator() {\n  return this;\n}\nfunction useMultipleRefs(initialValue) {\n  let count = 0;\n  return {\n    next() {\n      if (++count > MAX_ITERATIONS_COUNT) {\n        throw new Error(\"useMultipleRefs: reached more than 50 refs. This hook can be used exclusively with the array destructuring syntax.\");\n      }\n      return {\n        done: false,\n        value: useRef(initialValue)\n      };\n    },\n    [Symbol.iterator]: iterator\n  };\n}\nexport { useMultipleRefs as default };","map":{"version":3,"names":["useRef","MAX_ITERATIONS_COUNT","iterator","useMultipleRefs","initialValue","count","next","Error","done","value","Symbol","default"],"sources":["C:/GitRepHelpers/sandbox/node_modules/react-use-refs/dist/index.esm.js"],"sourcesContent":["import { useRef } from 'react';\n\nconst MAX_ITERATIONS_COUNT = 50;\n\nfunction iterator() {\n  return this;\n}\n\nfunction useMultipleRefs(initialValue) {\n  let count = 0;\n\n  return {\n    next() {\n      if (++count > MAX_ITERATIONS_COUNT) {\n        throw new Error(\n          \"useMultipleRefs: reached more than 50 refs. This hook can be used exclusively with the array destructuring syntax.\"\n        );\n      }\n\n      return {\n        done: false,\n        value: useRef(initialValue),\n      };\n    },\n    [Symbol.iterator]: iterator,\n  };\n}\n\nexport { useMultipleRefs as default };\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAE9B,MAAMC,oBAAoB,GAAG,EAAE;AAE/B,SAASC,QAAQA,CAAA,EAAG;EAClB,OAAO,IAAI;AACb;AAEA,SAASC,eAAeA,CAACC,YAAY,EAAE;EACrC,IAAIC,KAAK,GAAG,CAAC;EAEb,OAAO;IACLC,IAAIA,CAAA,EAAG;MACL,IAAI,EAAED,KAAK,GAAGJ,oBAAoB,EAAE;QAClC,MAAM,IAAIM,KAAK,CACb,oHACF,CAAC;MACH;MAEA,OAAO;QACLC,IAAI,EAAE,KAAK;QACXC,KAAK,EAAET,MAAM,CAACI,YAAY;MAC5B,CAAC;IACH,CAAC;IACD,CAACM,MAAM,CAACR,QAAQ,GAAGA;EACrB,CAAC;AACH;AAEA,SAASC,eAAe,IAAIQ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}