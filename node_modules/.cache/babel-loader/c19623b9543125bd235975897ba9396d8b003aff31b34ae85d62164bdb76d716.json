{"ast":null,"code":"import _objectWithoutProperties from \"C:/GitRepHelpers/sandbox/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"C:/GitRepHelpers/sandbox/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nconst _excluded = [\"isChild\", \"object\", \"children\", \"deep\", \"castShadow\", \"receiveShadow\", \"inject\", \"keys\"],\n  _excluded2 = [\"children\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport pick from 'lodash.pick';\nimport { SkeletonUtils } from 'three-stdlib';\nfunction createSpread(child, _ref) {\n  let {\n    keys = ['near', 'far', 'color', 'distance', 'decay', 'penumbra', 'angle', 'intensity', 'skeleton', 'visible', 'castShadow', 'receiveShadow', 'morphTargetDictionary', 'morphTargetInfluences', 'name', 'geometry', 'material', 'position', 'rotation', 'scale', 'up', 'userData', 'bindMode', 'bindMatrix', 'bindMatrixInverse', 'skeleton'],\n    deep,\n    inject,\n    castShadow,\n    receiveShadow\n  } = _ref;\n  let spread = pick(child, keys);\n  if (deep) {\n    if (spread.geometry && deep !== 'materialsOnly') spread.geometry = spread.geometry.clone();\n    if (spread.material && deep !== 'geometriesOnly') spread.material = spread.material.clone();\n  }\n  if (inject) {\n    if (typeof inject === 'function') spread = _objectSpread(_objectSpread({}, spread), {}, {\n      children: inject(child)\n    });else if (/*#__PURE__*/React.isValidElement(inject)) spread = _objectSpread(_objectSpread({}, spread), {}, {\n      children: inject\n    });else spread = _objectSpread(_objectSpread({}, spread), inject);\n  }\n  if (child instanceof THREE.Mesh) {\n    if (castShadow) spread.castShadow = true;\n    if (receiveShadow) spread.receiveShadow = true;\n  }\n  return spread;\n}\nconst Clone = /* @__PURE__ */React.forwardRef((_ref2, forwardRef) => {\n  let {\n      isChild = false,\n      object,\n      children,\n      deep,\n      castShadow,\n      receiveShadow,\n      inject,\n      keys\n    } = _ref2,\n    props = _objectWithoutProperties(_ref2, _excluded);\n  var _object;\n  const config = {\n    keys,\n    deep,\n    inject,\n    castShadow,\n    receiveShadow\n  };\n  object = React.useMemo(() => {\n    if (isChild === false && !Array.isArray(object)) {\n      let isSkinned = false;\n      object.traverse(object => {\n        if (object.isSkinnedMesh) isSkinned = true;\n      });\n      if (isSkinned) return SkeletonUtils.clone(object);\n    }\n    return object;\n  }, [object, isChild]);\n\n  // Deal with arrayed clones\n  if (Array.isArray(object)) {\n    return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n      ref: forwardRef\n    }), object.map(o => /*#__PURE__*/React.createElement(Clone, _extends({\n      key: o.uuid,\n      object: o\n    }, config))), children);\n  }\n\n  // Singleton clones\n  const _createSpread = createSpread(object, config),\n    {\n      children: injectChildren\n    } = _createSpread,\n    spread = _objectWithoutProperties(_createSpread, _excluded2);\n  const Element = object.type[0].toLowerCase() + object.type.slice(1);\n  return /*#__PURE__*/React.createElement(Element, _extends({}, spread, props, {\n    ref: forwardRef\n  }), ((_object = object) == null ? void 0 : _object.children).map(child => {\n    if (child.type === 'Bone') return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n      key: child.uuid,\n      object: child\n    }, config));\n    return /*#__PURE__*/React.createElement(Clone, _extends({\n      key: child.uuid,\n      object: child\n    }, config, {\n      isChild: true\n    }));\n  }), children, injectChildren);\n});\nexport { Clone };","map":{"version":3,"names":["_extends","THREE","React","pick","SkeletonUtils","createSpread","child","_ref","keys","deep","inject","castShadow","receiveShadow","spread","geometry","clone","material","_objectSpread","children","isValidElement","Mesh","Clone","forwardRef","_ref2","isChild","object","props","_objectWithoutProperties","_excluded","_object","config","useMemo","Array","isArray","isSkinned","traverse","isSkinnedMesh","createElement","ref","map","o","key","uuid","_createSpread","injectChildren","_excluded2","Element","type","toLowerCase","slice"],"sources":["C:/GitRepHelpers/sandbox/node_modules/@react-three/drei/core/Clone.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport pick from 'lodash.pick';\nimport { SkeletonUtils } from 'three-stdlib';\n\nfunction createSpread(child, {\n  keys = ['near', 'far', 'color', 'distance', 'decay', 'penumbra', 'angle', 'intensity', 'skeleton', 'visible', 'castShadow', 'receiveShadow', 'morphTargetDictionary', 'morphTargetInfluences', 'name', 'geometry', 'material', 'position', 'rotation', 'scale', 'up', 'userData', 'bindMode', 'bindMatrix', 'bindMatrixInverse', 'skeleton'],\n  deep,\n  inject,\n  castShadow,\n  receiveShadow\n}) {\n  let spread = pick(child, keys);\n  if (deep) {\n    if (spread.geometry && deep !== 'materialsOnly') spread.geometry = spread.geometry.clone();\n    if (spread.material && deep !== 'geometriesOnly') spread.material = spread.material.clone();\n  }\n  if (inject) {\n    if (typeof inject === 'function') spread = {\n      ...spread,\n      children: inject(child)\n    };else if ( /*#__PURE__*/React.isValidElement(inject)) spread = {\n      ...spread,\n      children: inject\n    };else spread = {\n      ...spread,\n      ...inject\n    };\n  }\n  if (child instanceof THREE.Mesh) {\n    if (castShadow) spread.castShadow = true;\n    if (receiveShadow) spread.receiveShadow = true;\n  }\n  return spread;\n}\nconst Clone = /* @__PURE__ */React.forwardRef(({\n  isChild = false,\n  object,\n  children,\n  deep,\n  castShadow,\n  receiveShadow,\n  inject,\n  keys,\n  ...props\n}, forwardRef) => {\n  var _object;\n  const config = {\n    keys,\n    deep,\n    inject,\n    castShadow,\n    receiveShadow\n  };\n  object = React.useMemo(() => {\n    if (isChild === false && !Array.isArray(object)) {\n      let isSkinned = false;\n      object.traverse(object => {\n        if (object.isSkinnedMesh) isSkinned = true;\n      });\n      if (isSkinned) return SkeletonUtils.clone(object);\n    }\n    return object;\n  }, [object, isChild]);\n\n  // Deal with arrayed clones\n  if (Array.isArray(object)) {\n    return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n      ref: forwardRef\n    }), object.map(o => /*#__PURE__*/React.createElement(Clone, _extends({\n      key: o.uuid,\n      object: o\n    }, config))), children);\n  }\n\n  // Singleton clones\n  const {\n    children: injectChildren,\n    ...spread\n  } = createSpread(object, config);\n  const Element = object.type[0].toLowerCase() + object.type.slice(1);\n  return /*#__PURE__*/React.createElement(Element, _extends({}, spread, props, {\n    ref: forwardRef\n  }), ((_object = object) == null ? void 0 : _object.children).map(child => {\n    if (child.type === 'Bone') return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n      key: child.uuid,\n      object: child\n    }, config));\n    return /*#__PURE__*/React.createElement(Clone, _extends({\n      key: child.uuid,\n      object: child\n    }, config, {\n      isChild: true\n    }));\n  }), children, injectChildren);\n});\n\nexport { Clone };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}